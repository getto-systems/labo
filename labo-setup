#!/bin/bash

labo_setup_main(){
  local root
  local plugin_root

  root=/home/shun
  plugin_root=$root/plugins

  labo_setup_shared
  labo_setup_plugins
  labo_setup_git
  labo_setup_vim
  labo_setup_direnv
  labo_setup_peco
  labo_setup_zsh
}

labo_setup_shared(){
  if [ -d $root/.shared ]; then
    cd $root
    local path
    local -a paths=(
      .aws
      .birdfirm
      .config
      .docker
      .docker_build
      .gem
      .gsutil
      .git-post
      .kube
      .local
      .ssh
      .terminfo
      .zsh
    )
    for path in ${paths[@]}; do
      if [ ! -L $path ]; then
        if [ -e $path ]; then
          if [ -d $.shared/$path ]; then
            mv $path/* .shared/$path/*
          else
            mv $path .shared/$path
          fi
        else
          mkdir -p .shared/$path
        fi
        echo "ln -s .shared/$path"
        ln -s .shared/$path
      fi
    done
  fi
}
labo_setup_plugins(){
  local dir
  local repo

  dir=$plugin_root
  mkdir -p $dir

  local -a repos=(
    git://github.com/shun-fix9/mybashrc
    git://github.com/shun-fix9/birdfirm
    git://github.com/shun-fix9/tmux-wrapper
    git://github.com/sanzen-sekai/mypassword
    git://github.com/sanzen-sekai/version-functions
    git://github.com/sanzen-sekai/dockerfile-build-functions
    git://github.com/sanzen-sekai/git-readme
    git://github.com/sanzen-sekai/git-pub
    git://github.com/sanzen-sekai/git-sub-status
    git://github.com/sanzen-sekai/git-post
    git://github.com/sanzen-sekai/git-branch-and-post
  )
  for repo in ${repos[@]}; do
    labo_setup_git_sync
  done
}
labo_setup_direnv(){
  local dir
  local direnv_version

  direnv_version=2.11.3
  echo install direnv v$direnv_version

  dir=$plugin_root/direnv
  mkdir -p $dir/bin

  if [ ! -d $dir/$direnv_version ]; then
    mkdir -p $dir/$direnv_version
    cd $dir/$direnv_version
    curl -sSL https://github.com/direnv/direnv/releases/download/v$direnv_version/direnv.linux-amd64 > direnv
    chmod a+x direnv
    cd $dir/bin
    rm -f direnv
    ln -s ../$direnv_version/direnv
  fi
}
labo_setup_peco(){
  local dir
  local peco_version

  peco_version=0.5.1
  echo install peco v$peco_version

  dir=$plugin_root/peco
  mkdir -p $dir/bin

  if [ ! -d $dir/$peco_version ]; then
    mkdir -p $dir/$peco_version
    cd $dir/$peco_version
    curl -sSL https://github.com/peco/peco/releases/download/v$peco_version/peco_linux_amd64.tar.gz > peco_linux_amd64.tar.gz
    tar xzf peco_linux_amd64.tar.gz
    cd $dir/bin
    rm -f peco
    ln -s ../$peco_version/peco_linux_amd64/peco
  fi
}
labo_setup_zsh(){
  cd $root
  if [ ! -d .zplug ]; then
    curl -sSL zplug.sh/installer | TERM=xterm zsh
  fi
  if [ ! -L .zshrc ]; then
    ln -s .config/zsh/zshrc .zshrc
  fi
}
labo_setup_git(){
  cd $root
  if [ ! -L .gitconfig ]; then
    ln -s .config/git/config .gitconfig
  fi
}
labo_setup_vim(){
  local dir
  local repo
  local repo_root
  local url
  local user
  local host

  if [ -d .config ]; then
    repo_root=.config/nvim/repos

    local -a repos=(
      git://github.com/Shougo/dein.vim
    )
    for repo in ${repos[@]}; do
      url=$(dirname $repo)
      user=$(basename $url)
      url=$(dirname $url)
      host=$(basename $url)

      dir=$repo_root/$host/$user
      mkdir -p $dir

      labo_setup_git_sync
    done
  fi
}

labo_setup_git_sync(){
  local name
  if [ -n "$1" ]; then
    name=$1
  else
    name=$(basename $repo)
  fi

  echo "$repo => $dir/$name"

  cd $dir
  if [ $name = "." ]; then
    if [ -d .git ]; then
      git pull
    else
      git clone $repo tmp_git_repo
      mv tmp_git_repo/.git .
      rm -rf tmp_git_repo
      git checkout .
    fi
  else
    if [ -d $name ]; then
      cd $name
      git pull
    else
      git clone $repo $name
    fi
  fi
}

labo_setup_main
